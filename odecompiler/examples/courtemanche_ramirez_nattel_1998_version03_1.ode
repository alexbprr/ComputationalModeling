#Parameters
stim_amplitude = -2.000000000000000e+03f;
stim_start = 5.000000000000000e+00f;
stim_end = 1.000000000000000e+05f;
stim_period = 1.000000000000000e+03f;
stim_duration = 2.000000000000000e+00f;
Cm = 1.000000000000000e+02f;
g_Na = 7.800000000000000e+00f;
R = 8.314299999999999e+00f;
T = 3.100000000000000e+02f;
F = 9.648670000000000e+01f;
Na_o = 1.400000000000000e+02f;
K_o = 5.400000000000000e+00f;
g_K1 = 9.000000000000000e-02f;
g_to = 1.652000000000000e-01f;
K_Q10 = 3.000000000000000e+00f;
g_Kr = 2.941176500000000e-02f;
g_Ks = 1.294117600000000e-01f;
g_Ca_L = 1.237500000000000e-01f;
i_NaK_max = 5.993387400000000e-01f;
Km_Na_i = 1.000000000000000e+01f;
Km_K_o = 1.500000000000000e+00f;
Ca_o = 1.800000000000000e+00f;
g_B_Na = 6.744375000000000e-04f;
g_B_Ca = 1.131000000000000e-03f;
g_B_K = 0.000000000000000e+00f;
I_NaCa_max = 1.600000000000000e+03f;
gamma = 3.500000000000000e-01f;
K_mNa = 8.750000000000000e+01f;
K_mCa = 1.380000000000000e+00f;
K_sat = 1.000000000000000e-01f;
i_CaP_max = 2.750000000000000e-01f;
K_rel = 3.000000000000000e+01f;
tau_tr = 1.800000000000000e+02f;
I_up_max = 5.000000000000000e-03f;
K_up = 9.200000000000000e-04f;
Ca_up_max = 1.500000000000000e+01f;
CMDN_max = 5.000000000000000e-02f;
Km_CMDN = 2.380000000000000e-03f;
TRPN_max = 7.000000000000001e-02f;
Km_TRPN = 5.000000000000000e-04f;
CSQN_max = 1.000000000000000e+01f;
Km_CSQN = 8.000000000000000e-01f;
V_cell = 2.010000000000000e+04f;

i_st = 0.0;
if(((time>=stim_start) and (time<=stim_end) and (((time-stim_start)-(floor(((time-stim_start)/stim_period))*stim_period))<=stim_duration))) {
    i_st = stim_amplitude
} else {
    i_st = 0.000000000000000e+00
}

E_Na = (((R*T)/F)*log((Na_o/Na_i)))
alpha_m = 0.0;
if((V==(-4.713000000000000e+01))) {
    alpha_m = 3.200000000000000e+00
} else {
    alpha_m = ((3.200000000000000e-01*(V+4.713000000000000e+01))/(1.000000000000000e+00-exp(((-1.000000000000000e-01)*(V+4.713000000000000e+01)))))
}

beta_m = (8.000000000000000e-02*exp(((-V)/1.100000000000000e+01)))
alpha_h = 0.0;
if((V<(-4.000000000000000e+01))) {
    alpha_h = (1.350000000000000e-01*exp(((V+8.000000000000000e+01)/(-6.800000000000000e+00))))
} else {
    alpha_h = 0.000000000000000e+00
}

beta_h = 0.0;
if((V<(-4.000000000000000e+01))) {
    beta_h = ((3.560000000000000e+00*exp((7.900000000000000e-02*V)))+(3.100000000000000e+05*exp((3.500000000000000e-01*V))))
} else {
    beta_h = (1.000000000000000e+00/(1.300000000000000e-01*(1.000000000000000e+00+exp(((V+1.066000000000000e+01)/(-1.110000000000000e+01))))))
}

alpha_j = 0.0;
if((V<(-4.000000000000000e+01))) {
    alpha_j = (((((-1.271400000000000e+05)*exp((2.444000000000000e-01*V)))-(3.474000000000000e-05*exp(((-4.391000000000000e-02)*V))))*(V+3.778000000000000e+01))/(1.000000000000000e+00+exp((3.110000000000000e-01*(V+7.923000000000000e+01)))))
} else {
    alpha_j = 0.000000000000000e+00
}

beta_j = 0.0;
if((V<(-4.000000000000000e+01))) {
    beta_j = ((1.212000000000000e-01*exp(((-1.052000000000000e-02)*V)))/(1.000000000000000e+00+exp(((-1.378000000000000e-01)*(V+4.014000000000000e+01)))))
} else {
    beta_j = ((3.000000000000000e-01*exp(((-2.535000000000000e-07)*V)))/(1.000000000000000e+00+exp(((-1.000000000000000e-01)*(V+3.200000000000000e+01)))))
}

E_K = (((R*T)/F)*log((K_o/K_i)))
alpha_oa = (6.500000000000000e-01*pow((exp(((V-(-1.000000000000000e+01))/(-8.500000000000000e+00)))+exp((((V-(-1.000000000000000e+01))-4.000000000000000e+01)/(-5.900000000000000e+01)))),(-1.000000000000000e+00)))
beta_oa = (6.500000000000000e-01*pow((2.500000000000000e+00+exp((((V-(-1.000000000000000e+01))+7.200000000000000e+01)/1.700000000000000e+01))),(-1.000000000000000e+00)))
oa_infinity = pow((1.000000000000000e+00+exp((((V-(-1.000000000000000e+01))+1.047000000000000e+01)/(-1.754000000000000e+01)))),(-1.000000000000000e+00))
alpha_oi = pow((1.853000000000000e+01+(1.000000000000000e+00*exp((((V-(-1.000000000000000e+01))+1.037000000000000e+02)/1.095000000000000e+01)))),(-1.000000000000000e+00))
beta_oi = pow((3.556000000000000e+01+(1.000000000000000e+00*exp((((V-(-1.000000000000000e+01))-8.740000000000000e+00)/(-7.440000000000000e+00))))),(-1.000000000000000e+00))
oi_infinity = pow((1.000000000000000e+00+exp((((V-(-1.000000000000000e+01))+3.310000000000000e+01)/5.300000000000000e+00))),(-1.000000000000000e+00))
g_Kur = (5.000000000000000e-03+(5.000000000000000e-02/(1.000000000000000e+00+exp(((V-1.500000000000000e+01)/(-1.300000000000000e+01))))))
alpha_ua = (6.500000000000000e-01*pow((exp(((V-(-1.000000000000000e+01))/(-8.500000000000000e+00)))+exp((((V-(-1.000000000000000e+01))-4.000000000000000e+01)/(-5.900000000000000e+01)))),(-1.000000000000000e+00)))
beta_ua = (6.500000000000000e-01*pow((2.500000000000000e+00+exp((((V-(-1.000000000000000e+01))+7.200000000000000e+01)/1.700000000000000e+01))),(-1.000000000000000e+00)))
ua_infinity = pow((1.000000000000000e+00+exp((((V-(-1.000000000000000e+01))+2.030000000000000e+01)/(-9.600000000000000e+00)))),(-1.000000000000000e+00))
alpha_ui = pow((2.100000000000000e+01+(1.000000000000000e+00*exp((((V-(-1.000000000000000e+01))-1.950000000000000e+02)/(-2.800000000000000e+01))))),(-1.000000000000000e+00))
beta_ui = (1.000000000000000e+00/exp((((V-(-1.000000000000000e+01))-1.680000000000000e+02)/(-1.600000000000000e+01))))
ui_infinity = pow((1.000000000000000e+00+exp((((V-(-1.000000000000000e+01))-1.094500000000000e+02)/2.748000000000000e+01))),(-1.000000000000000e+00))
alpha_xr = 0.0;
if((fabs((V+1.410000000000000e+01))<1.000000000000000e-10)) {
    alpha_xr = 1.500000000000000e-03
} else {
    alpha_xr = ((3.000000000000000e-04*(V+1.410000000000000e+01))/(1.000000000000000e+00-exp(((V+1.410000000000000e+01)/(-5.000000000000000e+00)))))
}

beta_xr = 0.0;
if((fabs((V-3.332800000000000e+00))<1.000000000000000e-10)) {
    beta_xr = 3.783611800000000e-04
} else {
    beta_xr = ((7.389800000000000e-05*(V-3.332800000000000e+00))/(exp(((V-3.332800000000000e+00)/5.123700000000000e+00))-1.000000000000000e+00))
}

xr_infinity = pow((1.000000000000000e+00+exp(((V+1.410000000000000e+01)/(-6.500000000000000e+00)))),(-1.000000000000000e+00))
alpha_xs = 0.0;
if((fabs((V-1.990000000000000e+01))<1.000000000000000e-10)) {
    alpha_xs = 6.800000000000000e-04
} else {
    alpha_xs = ((4.000000000000000e-05*(V-1.990000000000000e+01))/(1.000000000000000e+00-exp(((V-1.990000000000000e+01)/(-1.700000000000000e+01)))))
}

beta_xs = 0.0;
if((fabs((V-1.990000000000000e+01))<1.000000000000000e-10)) {
    beta_xs = 3.150000000000000e-04
} else {
    beta_xs = ((3.500000000000000e-05*(V-1.990000000000000e+01))/(exp(((V-1.990000000000000e+01)/9.000000000000000e+00))-1.000000000000000e+00))
}

xs_infinity = pow((1.000000000000000e+00+exp(((V-1.990000000000000e+01)/(-1.270000000000000e+01)))),(-5.000000000000000e-01))
i_Ca_L = (Cm*g_Ca_L*d*f*f_Ca*(V-6.500000000000000e+01))
d_infinity = pow((1.000000000000000e+00+exp(((V+1.000000000000000e+01)/(-8.000000000000000e+00)))),(-1.000000000000000e+00))
tau_d = 0.0;
if((fabs((V+1.000000000000000e+01))<1.000000000000000e-10)) {
    tau_d = (4.579000000000000e+00/(1.000000000000000e+00+exp(((V+1.000000000000000e+01)/(-6.240000000000000e+00)))))
} else {
    tau_d = ((1.000000000000000e+00-exp(((V+1.000000000000000e+01)/(-6.240000000000000e+00))))/(3.500000000000000e-02*(V+1.000000000000000e+01)*(1.000000000000000e+00+exp(((V+1.000000000000000e+01)/(-6.240000000000000e+00))))))
}

f_infinity = (exp(((-(V+2.800000000000000e+01))/6.900000000000000e+00))/(1.000000000000000e+00+exp(((-(V+2.800000000000000e+01))/6.900000000000000e+00))))
tau_f = (9.000000000000000e+00*pow(((1.970000000000000e-02*exp(((-pow(3.370000000000000e-02,2.000000000000000e+00))*pow((V+1.000000000000000e+01),2.000000000000000e+00))))+2.000000000000000e-02),(-1.000000000000000e+00)))
f_Ca_infinity = pow((1.000000000000000e+00+(Ca_i/3.500000000000000e-04)),(-1.000000000000000e+00))
tau_f_Ca = 2.000000000000000e+00
sigma = ((1.000000000000000e+00/7.000000000000000e+00)*(exp((Na_o/6.730000000000000e+01))-1.000000000000000e+00))
E_Ca = (((R*T)/(2.000000000000000e+00*F))*log((Ca_o/Ca_i)))
i_NaCa = ((Cm*I_NaCa_max*((exp(((gamma*F*V)/(R*T)))*pow(Na_i,3.000000000000000e+00)*Ca_o)-(exp((((gamma-1.000000000000000e+00)*F*V)/(R*T)))*pow(Na_o,3.000000000000000e+00)*Ca_i)))/((pow(K_mNa,3.000000000000000e+00)+pow(Na_o,3.000000000000000e+00))*(K_mCa+Ca_o)*(1.000000000000000e+00+(K_sat*exp((((gamma-1.000000000000000e+00)*V*F)/(R*T)))))))
i_CaP = ((Cm*i_CaP_max*Ca_i)/(5.000000000000000e-04+Ca_i))
i_rel = (K_rel*pow(u,2.000000000000000e+00)*v*w*(Ca_rel-Ca_i))
tau_u = 8.000000000000000e+00
tau_w = 0.0;
if((fabs((V-7.900000000000000e+00))<1.000000000000000e-10)) {
    tau_w = ((6.000000000000000e+00*2.000000000000000e-01)/1.300000000000000e+00)
} else {
    tau_w = ((6.000000000000000e+00*(1.000000000000000e+00-exp(((-(V-7.900000000000000e+00))/5.000000000000000e+00))))/((1.000000000000000e+00+(3.000000000000000e-01*exp(((-(V-7.900000000000000e+00))/5.000000000000000e+00))))*1.000000000000000e+00*(V-7.900000000000000e+00)))
}

w_infinity = (1.000000000000000e+00-pow((1.000000000000000e+00+exp(((-(V-4.000000000000000e+01))/1.700000000000000e+01))),(-1.000000000000000e+00)))
i_tr = ((Ca_up-Ca_rel)/tau_tr)
i_up = (I_up_max/(1.000000000000000e+00+(K_up/Ca_i)))
i_up_leak = ((I_up_max*Ca_up)/Ca_up_max)
Ca_CMDN = ((CMDN_max*Ca_i)/(Ca_i+Km_CMDN))
Ca_TRPN = ((TRPN_max*Ca_i)/(Ca_i+Km_TRPN))
Ca_CSQN = ((CSQN_max*Ca_rel)/(Ca_rel+Km_CSQN))
V_i = (V_cell*6.800000000000000e-01)
V_rel = (4.800000000000000e-03*V_cell)
V_up = (5.520000000000000e-02*V_cell)
B2 = (1.000000000000000e+00+((TRPN_max*Km_TRPN)/pow((Ca_i+Km_TRPN),2.000000000000000e+00))+((CMDN_max*Km_CMDN)/pow((Ca_i+Km_CMDN),2.000000000000000e+00)))
m_inf = (alpha_m/(alpha_m+beta_m))
tau_m = (1.000000000000000e+00/(alpha_m+beta_m))
h_inf = (alpha_h/(alpha_h+beta_h))
tau_h = (1.000000000000000e+00/(alpha_h+beta_h))
j_inf = (alpha_j/(alpha_j+beta_j))
tau_j = (1.000000000000000e+00/(alpha_j+beta_j))
i_K1 = ((Cm*g_K1*(V-E_K))/(1.000000000000000e+00+exp((7.000000000000001e-02*(V+8.000000000000000e+01)))))
i_to = (Cm*g_to*pow(oa,3.000000000000000e+00)*oi*(V-E_K))
tau_oa = (pow((alpha_oa+beta_oa),(-1.000000000000000e+00))/K_Q10)
tau_oi = (pow((alpha_oi+beta_oi),(-1.000000000000000e+00))/K_Q10)
i_Kur = (Cm*g_Kur*pow(ua,3.000000000000000e+00)*ui*(V-E_K))
tau_ua = (pow((alpha_ua+beta_ua),(-1.000000000000000e+00))/K_Q10)
tau_ui = (pow((alpha_ui+beta_ui),(-1.000000000000000e+00))/K_Q10)
i_Kr = ((Cm*g_Kr*xr*(V-E_K))/(1.000000000000000e+00+exp(((V+1.500000000000000e+01)/2.240000000000000e+01))))
tau_xr = pow((alpha_xr+beta_xr),(-1.000000000000000e+00))
i_Ks = (Cm*g_Ks*pow(xs,2.000000000000000e+00)*(V-E_K))
tau_xs = (5.000000000000000e-01*pow((alpha_xs+beta_xs),(-1.000000000000000e+00)))
f_NaK = pow((1.000000000000000e+00+(1.245000000000000e-01*exp((((-1.000000000000000e-01)*F*V)/(R*T))))+(3.650000000000000e-02*sigma*exp((((-F)*V)/(R*T))))),(-1.000000000000000e+00))
i_B_Na = (Cm*g_B_Na*(V-E_Na))
i_B_Ca = (Cm*g_B_Ca*(V-E_Ca))
i_B_K = (Cm*g_B_K*(V-E_K))
i_Na = (Cm*g_Na*pow(m,3.000000000000000e+00)*h*j*(V-E_Na))
i_NaK = ((((Cm*i_NaK_max*f_NaK*1.000000000000000e+00)/(1.000000000000000e+00+pow((Km_Na_i/Na_i),1.500000000000000e+00)))*K_o)/(K_o+Km_K_o))
Fn = (1.000000000000000e+03*((1.000000000000000e-15*V_rel*i_rel)-((1.000000000000000e-15/(2.000000000000000e+00*F))*((5.000000000000000e-01*i_Ca_L)-(2.000000000000000e-01*i_NaCa)))))
B1 = ((((2.000000000000000e+00*i_NaCa)-(i_CaP+i_Ca_L+i_B_Ca))/(2.000000000000000e+00*V_i*F))+(((V_up*(i_up_leak-i_up))+(i_rel*V_rel))/V_i))
u_infinity = pow((1.000000000000000e+00+exp(((-(Fn-3.417500000000000e-13))/1.367000000000000e-15))),(-1.000000000000000e+00))
tau_v = (1.910000000000000e+00+(2.090000000000000e+00*pow((1.000000000000000e+00+exp(((-(Fn-3.417500000000000e-13))/1.367000000000000e-15))),(-1.000000000000000e+00))))
v_infinity = (1.000000000000000e+00-pow((1.000000000000000e+00+exp(((-(Fn-6.834999999999999e-14))/1.367000000000000e-15))),(-1.000000000000000e+00)))

ode V' = ((-(i_Na+i_K1+i_to+i_Kur+i_Kr+i_Ks+i_B_Na+i_B_Ca+i_NaK+i_CaP+i_NaCa+i_Ca_L+i_st))/Cm)
ode m' = ((m_inf-m)/tau_m)
ode h' = ((h_inf-h)/tau_h)
ode j' = ((j_inf-j)/tau_j)
ode oa' = ((oa_infinity-oa)/tau_oa)
ode oi' = ((oi_infinity-oi)/tau_oi)
ode ua' = ((ua_infinity-ua)/tau_ua)
ode ui' = ((ui_infinity-ui)/tau_ui)
ode xr' = ((xr_infinity-xr)/tau_xr)
ode xs' = ((xs_infinity-xs)/tau_xs)
ode d' = ((d_infinity-d)/tau_d)
ode f' = ((f_infinity-f)/tau_f)
ode f_Ca' = ((f_Ca_infinity-f_Ca)/tau_f_Ca)
ode u' = ((u_infinity-u)/tau_u)
ode v' = ((v_infinity-v)/tau_v)
ode w' = ((w_infinity-w)/tau_w)
ode Na_i' = ((((-3.000000000000000e+00)*i_NaK)-((3.000000000000000e+00*i_NaCa)+i_B_Na+i_Na))/(V_i*F))
ode K_i' = (((2.000000000000000e+00*i_NaK)-(i_K1+i_to+i_Kur+i_Kr+i_Ks+i_B_K))/(V_i*F))
ode Ca_i' = (B1/B2)
ode Ca_up' = (i_up-(i_up_leak+((i_tr*V_rel)/V_up)))
ode Ca_rel' = ((i_tr-i_rel)*pow((1.000000000000000e+00+((CSQN_max*Km_CSQN)/pow((Ca_rel+Km_CSQN),2.000000000000000e+00))),(-1.000000000000000e+00)))

#initial conditions
initial V = -8.118000e+01
initial m = 2.908000e-03
initial h = 9.649000e-01
initial j = 9.775000e-01
initial oa = 3.043000e-02
initial oi = 9.992000e-01
initial ua = 4.966000e-03
initial ui = 9.986000e-01
initial xr = 3.296000e-05
initial xs = 1.869000e-02
initial d = 1.367000e-04
initial f = 9.996000e-01
initial f_Ca = 7.755000e-01
initial u = 2.350000e-112
initial v = 1.000000e+00
initial w = 9.992000e-01
initial Na_i = 1.117000e+01
initial K_i = 1.390000e+02
initial Ca_i = 1.013000e-04
initial Ca_up = 1.488000e+00
initial Ca_rel = 1.488000e+00
